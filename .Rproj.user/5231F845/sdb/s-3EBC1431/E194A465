{
    "contents" : "# Author comment ---------------------------------------------------------------\n# created by: Darren Donhardt\n# create date: 19 Apr 2014\n# modified date: 19 Apr 2014\n# style guide: Google R Style Guide (refer below)\n#   http://google-styleguide.googlecode.com/svn/trunk/Rguide.xml\n\n\n# Purpose of program -----------------------------------------------------------\n# The intent of this program is produce two \"tidy data sets\" by loading and \n# cleaning data from \"UCI Machine Learning website. See address below\n# http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using\n#   +Smartphones\n# As required for Coursera \"Getting and Cleansing Data\" course peer assessment.\n#\n# note: Errors are generated on the aggregate function for the non integer/\n# numeric column of activity name label.\n\n\n# Get dataset ------------------------------------------------------------------\n# url = paste(\"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2\",\n#  \"FUCI%20HAR%20Dataset.zip\")\n# download.file(url = url, destfile = \"./Dataset.zip\", method = \"auto\")\n\n\n# Source statements ------------------------------------------------------------\n# None required to source\n\n\n# Library statements -----------------------------------------------------------\n# None required to load\n\n# Create Features Table --------------------------------------------------------\n\n# Load features table\nfilename = \"./UCI_HAR_Dataset/features.txt\"\nfeature.list <- read.table(filename, col.names = c(\"feature.id\",\"feature.name\"))\n\n\n# Create Activity Table --------------------------------------------------------\n\n# Load activity table\nfilename = \"./UCI_HAR_Dataset/activity_labels.txt\"\nactivity.list <- read.table(filename, col.names = c(\"activity.code\"\n                                                    ,\"activity.name\"))\n\n\n# Create Test Results Tables ---------------------------------------------------\n\n# Load test subject file\nfilename <- \"./UCI_HAR_Dataset/test/subject_test.txt\"\ntest.subject <- read.table(filename,header=FALSE,col.names=\"subject.code\")\n\n# load test results data file\nfilename <- \"./UCI_HAR_Dataset/test/x_test.txt\"\ninitial <- read.table(filename, nrows = 100)\nclasses <- sapply(initial,class)\nresults.test.data <- read.table(filename, colClasses = classes)\n\n# load test results activity file\nfilename <- \"./UCI_HAR_Dataset/test/y_test.txt\"\ntest.results.activity.code <- read.table(filename,header=FALSE,\n                                       col.names=\"activity.code\")\n\n# make the results data.frame column labels meaningful\ncolnames(results.test.data) <- feature.list$feature.name\n\n\n# add activity codes to train results\nresults.test <- data.frame(type=\"train\",\n                           test.subject, \n                           test.results.activity.code, \n                           results.test.data,\n                           check.names=FALSE)\n\n\n\n# Create Train Results Tables --------------------------------------------------\n\n# Load train subject file\nfilename <- \"./UCI_HAR_Dataset/train/subject_train.txt\"\ntrain.subject <- read.table(filename,header=FALSE,col.names=\"subject.code\")\n\n# load train results data from file\nfilename = \"./UCI_HAR_Dataset/train/x_train.txt\"\ninitial <- read.table(filename, nrows = 100)\nclasses <- sapply(initial,class)\nresults.train.data <- read.table(filename, colClasses = classes)\n\n# load train results activity file\nfilename <- \"./UCI_HAR_Dataset/train/y_train.txt\"\nresults.train.labels <- read.table(filename,header=FALSE, \n                                   col.names=\"activity.code\")\n\n# make the results data.frame column labels meaningful\ncolnames(results.train.data) <- feature.list$feature.name\n\n# add activity codes to train results\nresults.train <- data.frame(type=\"train\",\n                            train.subject, \n                            results.train.labels, \n                            results.train.data, \n                            check.names=FALSE)\n\n\n# Append test results to train results -----------------------------------------\n# also add activity name labels\n\n# append train results to test results\nresults.base <- rbind(results.test, results.train)\n\n\n# get full list of subject.code and activity.code for all rows\nresults.row.labels <- results.base[,c(1:3)]\n\n# update activity labels to results.row.labels\nresults.row.labels$activity.name <- activity.list[match(\n                results.row.labels$activity.code \n                ,activity.list$activity.code), \n        'activity.name']\n\n# generate final result data set\nresults.final <- data.frame(type = results.row.labels$type,\n                            subject.code=results.row.labels$subject.code,\n                            activity.name=results.row.labels$activity.name,\n                            results.base[,3:ncol(results.base)],\n                            check.names=FALSE)\n\n\n\n# Extract only measurements for mean and std dev -------------------------------\n\n# Identify columns in results where feature like \"mean\" or \"std\" deviation.\nfeature.stdmean <- grep(\"-mean\\\\(\\\\)|-std\\\\(\\\\)\",colnames(results.final),\n                        fixed=FALSE)\ncol.list <- c(which(colnames(results.final)==\"subject.code\"),\n              which(colnames(results.final)==\"activity.name\"),\n              feature.stdmean)\n\n# create data.frame using previous results.final for above specified columns\nresults.stdmean <- results.final[,col.list]\n\n\n# get mean of each variable for each subject / activity combination ------------\n\naggdata <- aggregate(results.stdmean,\n                     by = list(results.stdmean$subject.code,\n                               results.stdmean$activity.name),\n                     FUN = mean,\n                     na.rm = TRUE)\n\n# rename group columns to something readable\nnames(aggdata)[names(aggdata)==\"Group.1\"] <- \"subject.code.group\"\nnames(aggdata)[names(aggdata)==\"Group.2\"] <- \"activity.name.group\"\n\n# change order of data set by subject then activity\nresults.agg <- aggdata[order(aggdata$subject.code.group,\n                         aggdata$activity.name.group),]\n\n# write table to dput and csv\ndput(results.agg, file=\"tidy_data_dput_dataset.R\")\nwrite.csv(results.agg, file = \"tidy_data_csv.csv\")",
    "created" : 1397946032289.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "268870097",
    "id" : "E194A465",
    "lastKnownWriteTime" : 1397945942,
    "path" : "C:/Inbox/Training/Coursera - 3. Getting and Cleansing Data/Week 2/Peer Assessment/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}